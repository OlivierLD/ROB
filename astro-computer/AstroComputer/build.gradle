buildscript {
    // ext.kotlin_version = '1.9.20' // ''1.6.0' // '1.4.0'  // '1.3.72'
    ext.scala_version = '2.13.8'
//    repositories {
//        mavenCentral()
//        maven {
//            url "https://plugins.gradle.org/m2/"
//        }
//    }
//    dependencies {
//        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
//    }
}

plugins {
    id 'java'
    id 'scala'
    // id 'idea'  // For kotlin ?
    // id 'kotlin'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '6.0.0' // Remove version if used in a gradle submodule.
    id "application"
}

repositories {
    mavenLocal()
    mavenCentral()
//    maven { url "https://www.datanucleus.org/downloads/maven2" }
//    maven { url "https://oss.sonatype.org/content/groups/public" }
}

//compileJava.options.encoding = 'ISO-8859-1'
compileJava.options.compilerArgs += ["-Xlint:unchecked"]

group = 'astro.computer'
version = '1.0'

sourceCompatibility = 1.8
targetCompatibility = 1.8

tasks.withType(JavaCompile) {
  if (JavaVersion.current() != project.targetCompatibility) {
//    throw new GradleException(
      println "Minimal JDK requirement for build met: ${Double.parseDouble(JavaVersion.current().toString()) >= Double.parseDouble(project.targetCompatibility.toString())}"
      // println "This is a test, 10 * current, etc : ${Double.parseDouble(JavaVersion.current().toString()) * 10}, ${Double.parseDouble(project.targetCompatibility.toString()) * 100}"
      println "+------ Warning: Java version (JAVA_HOME) possible mismatch -----\n" +
            "| In task $name ($project.name), the java version used ${JavaVersion.current()} is not the expected version ${project.targetCompatibility}.\n" +
            "+----------------------------------------------------------------"
//    )
  } else {
    println ">> From task $name (in $project.name), using java version ${JavaVersion.current()} "
  }
  options.encoding = 'UTF-8'
}

dependencies {
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.14.0'

    implementation project(':astro-computer:AstroUtilities')
    // implementation project(':AstroUtilities')

    // implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    implementation "org.scala-lang:scala-library:$scala_version"   // 2.12.5"
    implementation "org.scala-lang:scala-compiler:$scala_version"  // 2.12.5"
    testImplementation 'junit:junit:4.13.1'
}

// See https://docs.gradle.org/current/userguide/publishing_maven.html
publishing {
    publications {
        maven(MavenPublication) {  // Required by publishToMavenLocal
            groupId = 'astro.computer'
            artifactId = 'AstroComputer'
            version = '1.0'

            from components.java
        }
    }
}

// Try using ../gradlew run --args="--now"
mainClassName = "celestial.almanac.JavaSample"

shadowJar {
    zip64 true
    mergeServiceFiles()
}
