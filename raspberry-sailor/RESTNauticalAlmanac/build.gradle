plugins {
  id 'java'
//id 'scala'
  id 'idea'
  id 'maven-publish'
  id 'com.github.johnrengelman.shadow' // version '4.0.2'
}
compileJava {
  options.encoding = 'UTF-8'
  options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}

group = 'raspberry.on.board'
version = '1.0'

repositories {
  mavenCentral()
  mavenLocal()
  maven { url "https://www.datanucleus.org/downloads/maven2" }
}

dependencies {
  implementation 'com.fasterxml.jackson.core:jackson-databind:2.14.0'
//  implementation "com.google.code.gson:gson:$google_gson_gson"
  implementation 'oracle:xmlparser:2.0'
//  implementation project(':common-utils')
  implementation project(':http-tiny-server')
  implementation project(':raspberry-sailor:NMEA-multiplexer')
  implementation project(':raspberry-sailor:NMEA-Parser')
  implementation project(':astro-computer:AstroUtilities')
  implementation project(':astro-computer:AstroComputer')
  testImplementation "junit:junit:$junit_version"
//  testImplementation 'org.glassfish.jersey.media:jersey-media-json-jackson:2.25.1'
  testImplementation 'com.fasterxml.jackson.core:jackson-databind:2.14.0'
}

shadowJar {
  zip64 true
}

task runSample(type: JavaExec, dependsOn: build, description: "Sample calculation, and output.") {
//  classpath = configurations.runtime
//classpath project.configurations.default
//classpath sourceSets.main.output.classesDir
  classpath sourceSets.main.runtimeClasspath
  main = 'nauticalalmanac.sample.Main4Tests'
  workingDir "."
}

runSample.doFirst {
  println "--------------------------------------------------------------------------------------"
  println ">>> Run like this: gradlew runSample [--console plain] --no-daemon"
  println "--------------------------------------------------------------------------------------"
}
