#
# MUX definition.
#
name: "Logging Data from the Kayak"
description:
  - Read a GPS on /dev/ttyS80
  - Read a BME280 from a TCP Server in Python, on port 8001
  - Display on an SSD1306 128x64
  - Log data in a file
context:
  with.http.server: true
  http.port: 9999
  init.cache: true
  damping: 30
channels:
  - type: serial   # GPS
    port: /dev/ttyS80
    baudrate: 4800
    verbose: false
  - type: tcp
    server: 192.168.1.103
    port: 8001
    verbose: false
forwarders:
#  - type: rest   # For an SSD1306. Raw NMEA sentences. Not really useful!
#    rest.protocol: http
#    server.name: 192.168.1.103
#    server.port: 8080
#    rest.resource: /ssd1306/nmea-data
#    rest.verb: PUT
#    http.headers: Content-Type:plain/text
#    verbose: false
  - class: nmea.forwarders.NMEAtoTextProcessor   # An interesting use-case. Formatted data on an SSD1306.
    properties: ./nmea-to-text.properties
  - type: file
    filename: ./data.nmea
    flush: true
    verbose: false
#  - type: file
#    timebase.filename: true
#    filename.suffix: "_LOG"
#    log.dir: "logged"
#    split: "hour"
#    verbose: false

